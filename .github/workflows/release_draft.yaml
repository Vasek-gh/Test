name: "Release: create drawft"

on:
  workflow_dispatch:

jobs:
  Build:
    name: Main
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Fetch tags
        run: git fetch --tags

      - id: get_last_release_tag
        name: Get last release tag
        run: echo "lastTag=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_OUTPUT

      - id: fetch_commits
        name: Fetch commits
        run: git fetch --shallow-exclude=${{ steps.get_last_release_tag.outputs.lastTag }}

      - id: get_main_ref
        name: Get main branch ref
        run: echo "mainRef=$(git ls-remote --heads origin main | cut -f 1)" >> $GITHUB_OUTPUT

      - id: get_commits
        name: Get commits
        run: echo "commitList=$(git log ${{ steps.get_last_release_tag.outputs.lastTag }}..${{ steps.get_main_ref.outputs.mainRef }} --pretty=format:%h | paste -sd ' ')" >> $GITHUB_OUTPUT

      - id: get_pull_request_list
        name: Get pull request list
        run: echo "prList=$(gh pr list --state merged --search "${{ steps.get_commits.outputs.commitList }}" --json "number,url,title,labels,author")" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ github.token }}

      - id: create_notes
        name: Create notes
        uses: actions/github-script@v7
        env:
          GH_TOKEN: ${{ github.token }}
        with:
          result-encoding: string
          script: |
            const script = require('./.github/scripts/create_notes.js');
            const result = await script({
              core: core,
              currentVersion: '${{ steps.get_last_release_tag.outputs.lastTag }}',
              releaseType: 'patch',
              prJson: '${{ steps.get_pull_request_list.outputs.prList }}'
            });

      - name: Echo notes
        run: echo "${{steps.set-create_notes.outputs.result}}"